import org.apache.spark.SparkConf
import org.apache.spark.SparkContext
import org.apache.spark.SparkContext._
import org.apache.spark.sql._
import org.apache.commons._
import org.apache.spark.sql.functions._
import com.databricks.spark.csv.CsvParser
import com.databricks.spark.csv._
import org.apache.commons.csv.CSVFormat
import org.apache.commons.csv.CSVParser
import java.awt.image.LookupTable



object gather_PN_ticket {
  def main(args:Array[String]){  
    
    val conf= new SparkConf().setAppName("gather_PN_ticket").setMaster("local")
   val sc= new SparkContext(conf)
    val sqlContext = new org.apache.spark.sql.SQLContext(sc)
    
    val df = sqlContext.read.format("com.databricks.spark.csv").option("parserLib", "univocity").option("delimiter",";").option("inferSchema","true").option("header","true").load("D:\\Users\\dibudale\\Disha\\OBS\\Data\\AllRapReference.csv")
    
   val df1 = sqlContext.read.format("com.databricks.spark.csv").option("parserLib", "univocity").option("delimiter",";").option("inferSchema","true").option("header","true").load("src\\test\\resources\\intermediate_filter_output_fosav_acort.csv")
    
  
     import sqlContext.implicits._
     
      val joined_df = df1.as('a).join(df.as('b), $"a.rap" === $"b.rap", "left_outer")
      
      val df_join=joined_df.select($"a.num_ticket",$"a.identifiant_eds_pilote",$"a.poste_utilisateur",$"a.origine",$"a.date_creation_ticket",$"a.date_debut_ticket",
          $"a.date_cloture_ticket",$"a.date_retablissement",$"a.sem_cloture_ticket",$"a.mois_cloture_ticket",$"a.mois_cloture_ticket_indus",$"a.raison_sociale",
          $"a.raison_sociale_ticket",$"a.addresse_complete_client",$"a.code_postal_client",$"a.siren",$"a.datemescom",$"a.type_produit",$"a.etat_produit",$"a.description",
          $"a.nature_finale",$"a.responsabilite_pbm",$"a.famille_de_probleme",$"a.detail_probleme",$"a.gtr",$"a.plage_horaire_gtr",$"a.societe_extremite_A",
          $"a.ville_extremite_A",$"a.voie_extremite_A",$"a.cp_extremite_A",$"a.societe_extremite_B",$"a.ville_extremite_B",$"a.voie_extremite_B",$"a.cp_extremite_B",
          $"a.identifiant_2_produit",$"a.identifiant_3_produit",$"a.identifiant_4_produit",$"a.gtr_respecte",$"a.is_repetitif",$"a.complement_interne",
          $"a.libelle_imputation",$"a.libelle_succinct",$"a.type_ticket",$"a.donnee_complementaire",$"a.initiateur_nom_utilisateur",$"a.duree_gel",
          $"a.duree_constractuelle_indispo",$"a.nature_initiale",$"a.nombre_der_clos_produit_3_mois",$"a.dependance_ticket",$"a.imputation_princ",$"a.eds_active",
          $"a.poste_active",$"a.dt_deb_suivi",$"a.dt_fin_suivi",$"a.dt_deb_pec",$"a.duree_totale",$"a.pht_idtcom",$"a.ip_admin",$"a.ios_version",$"a.constructeur",
          $"a.chassis",$"a.num_pivot",$"a.element_reseau",$"a.type_interne",$"a.duree_indisponibilite",$"a.duree_indisponibilite_hors_gel",$"a.delai_activation_pec",
          $"a.identifiant_1_produit",$"a.is_gtrisable",$"a.ce_id",$"a.connexion_id",$"a.support_id",$"a.identifiant_sous_reseau",$"a.nb_paires",$"a.collect_role",
          $"a.router_role",$"a.bas_id",$"a.category",$"a.subcategory",$"a.cause_nrgtr",$"a.responsabilite_nrgtr",$"a.ios_version_from_iai",$"a.dslam_id",
          $"a.master_dslam_id",$"a.nortel_id",$"a.pe_id",$"a.fav_id",$"a.ntu_id",$"a.tronc_type",$"a.population",$"a.population_cat",$"a.rap",
          $"b.support_type_nominal",$"b.support_nominal",$"b.support_type_secours",$"b.support_secours",$"b.collecte_nominal",$"b.collecte_secours")
      
     // val df_join = joined_df.select($"a.*",$"b.support_type_nominal",$"b.support_nominal",$"b.support_type_secours",$"b.support_secours",$"b.collecte_nominal",$"b.collecte_secours")

      val df2 = df_join.withColumn("service_support", when($"router_role" === "NOMINAL" && $"router_role".isNotNull,$"support_type_nominal").when($"router_role" === "SECOURS" && $"router_role".isNotNull,$"support_type_secours").otherwise("NULL"))
      .select("num_ticket","identifiant_eds_pilote","poste_utilisateur","origine","date_creation_ticket","date_debut_ticket",
          "date_cloture_ticket","date_retablissement","sem_cloture_ticket","mois_cloture_ticket","mois_cloture_ticket_indus","raison_sociale",
         "raison_sociale_ticket","addresse_complete_client","code_postal_client","siren","datemescom","type_produit","etat_produit","description",
          "nature_finale","responsabilite_pbm","famille_de_probleme","detail_probleme","gtr","plage_horaire_gtr","societe_extremite_A",
         "ville_extremite_A","voie_extremite_A","cp_extremite_A","societe_extremite_B","ville_extremite_B","voie_extremite_B","cp_extremite_B",
          "identifiant_2_produit","identifiant_3_produit","identifiant_4_produit","gtr_respecte","is_repetitif","complement_interne",
          "libelle_imputation","libelle_succinct","type_ticket","donnee_complementaire","initiateur_nom_utilisateur","duree_gel",
          "duree_constractuelle_indispo","nature_initiale","nombre_der_clos_produit_3_mois","dependance_ticket","imputation_princ","eds_active",
          "poste_active","dt_deb_suivi","dt_fin_suivi","dt_deb_pec","duree_totale","pht_idtcom","ip_admin","ios_version","constructeur",
          "chassis","num_pivot","element_reseau","type_interne","duree_indisponibilite","duree_indisponibilite_hors_gel","delai_activation_pec",
          "identifiant_1_produit","is_gtrisable","ce_id","connexion_id","support_id","identifiant_sous_reseau","nb_paires","collect_role",
          "router_role","bas_id","category","subcategory","cause_nrgtr","responsabilite_nrgtr","ios_version_from_iai","dslam_id",
          "master_dslam_id","nortel_id","pe_id","fav_id","ntu_id","tronc_type","population","population_cat","rap",
          "service_support","support_nominal","support_secours","collecte_nominal","collecte_secours")
    
      val df3= df2.withColumn("support", when($"router_role" === "NOMINAL" && $"router_role".isNotNull,$"support_nominal").when($"router_role" === "SECOURS" && $"router_role".isNotNull,$"support_secours").otherwise("NULL")).
      select("num_ticket","identifiant_eds_pilote","poste_utilisateur","origine","date_creation_ticket","date_debut_ticket",
          "date_cloture_ticket","date_retablissement","sem_cloture_ticket","mois_cloture_ticket","mois_cloture_ticket_indus","raison_sociale",
          "raison_sociale_ticket","addresse_complete_client","code_postal_client","siren","datemescom","type_produit","etat_produit","description",
          "nature_finale","responsabilite_pbm","famille_de_probleme","detail_probleme","gtr","plage_horaire_gtr","societe_extremite_A",
         "ville_extremite_A","voie_extremite_A","cp_extremite_A","societe_extremite_B","ville_extremite_B","voie_extremite_B","cp_extremite_B",
          "identifiant_2_produit","identifiant_3_produit","identifiant_4_produit","gtr_respecte","is_repetitif","complement_interne",
          "libelle_imputation","libelle_succinct","type_ticket","donnee_complementaire","initiateur_nom_utilisateur","duree_gel",
          "duree_constractuelle_indispo","nature_initiale","nombre_der_clos_produit_3_mois","dependance_ticket","imputation_princ","eds_active",
          "poste_active","dt_deb_suivi","dt_fin_suivi","dt_deb_pec","duree_totale","pht_idtcom","ip_admin","ios_version","constructeur",
          "chassis","num_pivot","element_reseau","type_interne","duree_indisponibilite","duree_indisponibilite_hors_gel","delai_activation_pec",
          "identifiant_1_produit","is_gtrisable","ce_id","connexion_id","support_id","identifiant_sous_reseau","nb_paires","collect_role",
          "router_role","bas_id","category","subcategory","cause_nrgtr","responsabilite_nrgtr","ios_version_from_iai","dslam_id",
          "master_dslam_id","nortel_id","pe_id","fav_id","ntu_id","tronc_type","population","population_cat","rap",
          "service_support","support","collecte_nominal","collecte_secours")
      
      val df4 =df3.withColumn("collect", when($"router_role" === "NOMINAL" && $"router_role".isNotNull,$"collecte_nominal").when($"router_role" === "SECOURS" && $"router_role".isNotNull,$"collecte_secours").otherwise("NULL"))
      .select("num_ticket","identifiant_eds_pilote","poste_utilisateur","origine","date_creation_ticket","date_debut_ticket",
          "date_cloture_ticket","date_retablissement","sem_cloture_ticket","mois_cloture_ticket","mois_cloture_ticket_indus","raison_sociale",
          "raison_sociale_ticket","addresse_complete_client","code_postal_client","siren","datemescom","type_produit","etat_produit","description",
          "nature_finale","responsabilite_pbm","famille_de_probleme","detail_probleme","gtr","plage_horaire_gtr","societe_extremite_A",
         "ville_extremite_A","voie_extremite_A","cp_extremite_A","societe_extremite_B","ville_extremite_B","voie_extremite_B","cp_extremite_B",
          "identifiant_2_produit","identifiant_3_produit","identifiant_4_produit","gtr_respecte","is_repetitif","complement_interne",
          "libelle_imputation","libelle_succinct","type_ticket","donnee_complementaire","initiateur_nom_utilisateur","duree_gel",
          "duree_constractuelle_indispo","nature_initiale","nombre_der_clos_produit_3_mois","dependance_ticket","imputation_princ","eds_active",
          "poste_active","dt_deb_suivi","dt_fin_suivi","dt_deb_pec","duree_totale","pht_idtcom","ip_admin","ios_version","constructeur",
          "chassis","num_pivot","element_reseau","type_interne","duree_indisponibilite","duree_indisponibilite_hors_gel","delai_activation_pec",
          "identifiant_1_produit","is_gtrisable","ce_id","connexion_id","support_id","identifiant_sous_reseau","nb_paires","collect_role",
          "router_role","bas_id","category","subcategory","cause_nrgtr","responsabilite_nrgtr","ios_version_from_iai","dslam_id",
          "master_dslam_id","nortel_id","pe_id","fav_id","ntu_id","tronc_type","population","population_cat","rap","service_support","support","collect")
      
      
     // df4.withColumn("year_date", dayofyear($"date_cloture_ticket")).select($"year_date").show()
      
       val df5=df4.withColumn("year_date",substring($"date_cloture_ticket",0,4) ).select($"*",$"year_date")
       
     /* def StringReplaceFirst(s:String)={
      if(s != "" || s != null){
        if (s.substring(1, 3)== "ST") s.replaceFirst("ST", "SAINT") else s  
      }else "NULL"
      }*/
    
       
      val newDF= df5.select("*").withColumn("ville_extremite_A", when($"ville_extremite_A".isNotNull && substring($"ville_extremite_A", 1, 3)==="ST", $"ville_extremite_A".toString().replaceFirst("ST", "SAINT")).otherwise("NULL"))
             
       
       
       
       val df6=sqlContext.read.format("com.databricks.spark.csv").option("parserLib", "univocity").option("delimiter",";").option("inferSchema","true").option("header","true").load("/obs/data/intermediate/intermediate_insee.csv")
       
       
       
       val df7 = newDF.as('a).join(df6.as('b),$"a.code_postal_client" === $"nom_commune_caps2", "left_outer")
       
       val df8 = df7.select($"a.*",$"b.population")
       
       
       
       val df_CategoriesIncidents = sqlContext.read.format("com.databricks.spark.csv").option("parserLib", "univocity").option("delimiter",";").option("inferSchema","true").option("header","true").load("file:///obs/data/raw/CategoriesIncidents.csv")
       
       
       
       
       
       val cat_insee_join = df8.as('a).join(df_CategoriesIncidents.as('b), $"a.detail_probleme" === $"b.detail_probleme", "inner_join")
       
       
       val unused_insee_join = df8.as('a).join(df_CategoriesIncidents.as('b), $"a.detail_probleme" === $"b.detail_probleme", "left_outer").where($"b.detail_probleme".isNull)    
       
   
      val unused_insee_cat_join= unused_insee_join.as('a).join(df_CategoriesIncidents.as('b), $"a.famille_de_probleme" === $"b.famille_probleme", "inner_join")
      
      val unused_of_unused_insee_cat_join = df8.as('a).join(df_CategoriesIncidents.as('b), $"a.famille_de_probleme" === $"b.famille_probleme", "left_outer").where($"b.famille_probleme".isNull)
      
      val transform_unused_of_unused = unused_of_unused_insee_cat_join.withColumn("category",lit("Autres")).withColumn("subcategory",lit("Autres"))
      
      
      val dfs = Seq(cat_insee_join,unused_insee_cat_join,transform_unused_of_unused)
      
      val dfs_union_insee_cat= dfs.reduce(_ unionAll _)
      .select("num_ticket","identifiant_eds_pilote","poste_utilisateur","origine","date_creation_ticket","date_debut_ticket",
          "date_cloture_ticket","date_retablissement","sem_cloture_ticket","mois_cloture_ticket","mois_cloture_ticket_indus","raison_sociale",
          "raison_sociale_ticket","addresse_complete_client","code_postal_client","siren","datemescom","type_produit","etat_produit","description",
          "nature_finale","responsabilite_pbm","famille_de_probleme","detail_probleme","gtr","plage_horaire_gtr","societe_extremite_A",
         "ville_extremite_A","voie_extremite_A","cp_extremite_A","societe_extremite_B","ville_extremite_B","voie_extremite_B","cp_extremite_B",
          "identifiant_2_produit","identifiant_3_produit","identifiant_4_produit","gtr_respecte","is_repetitif","complement_interne",
          "libelle_imputation","libelle_succinct","type_ticket","donnee_complementaire","initiateur_nom_utilisateur","duree_gel",
          "duree_constractuelle_indispo","nature_initiale","nombre_der_clos_produit_3_mois","dependance_ticket","imputation_princ","eds_active",
          "poste_active","dt_deb_suivi","dt_fin_suivi","dt_deb_pec","duree_totale","pht_idtcom","ip_admin","ios_version","constructeur",
          "chassis","num_pivot","element_reseau","type_interne","duree_indisponibilite","duree_indisponibilite_hors_gel","delai_activation_pec",
          "identifiant_1_produit","is_gtrisable","ce_id","connexion_id","support_id","identifiant_sous_reseau","nb_paires","collect_role",
          "router_role","bas_id","category","subcategory","cause_nrgtr","responsabilite_nrgtr","ios_version_from_iai","dslam_id",
          "master_dslam_id","nortel_id","pe_id","fav_id","ntu_id","tronc_type","population_cat","rap","service_support","support","collect","year_date","population","category","subcategory")
     
          
          
          
      
      val df_NRGTRreferentiel =sqlContext.read.format("com.databricks.spark.csv").option("parserLib", "univocity").option("delimiter",";").option("inferSchema","true").option("header","true").load("file:///obs/data/raw/NRGTRreferentiel.csv")
      
      
      
      val join_NRGTRreferentiel = dfs_union_insee_cat.as('a).join(df_NRGTRreferentiel.as('b), $"a.complement_interne" === $"b.complement_interne","left_outer").select($"a.*",$"b.cause_nrgtr", $"b.responsabilite_nrgtr")
      
      
      
      
      val df_incidentologie_wasac_iai_ios=sqlContext.read.format("com.databricks.spark.csv").option("parserLib", "univocity").option("delimiter",";").option("inferSchema","true").option("header","true").load("/obs/data/intermediate/intermediate_wasac_iai_ios.csv")
     
      
      val gather_ios_join= join_NRGTRreferentiel.as('a).join(df_incidentologie_wasac_iai_ios.as('b), $"a.num_ticket" === $"b.ticketid" && $"a.pht_idtcom" === $"b.feuillet", "left_outer").withColumnRenamed("ios_version", "out.ios_version_from_iai").select($"a.*",$"b.ios_version_from_iai")
      
      
      
      val df_incidentologie_wasac_iai_nb_paires=sqlContext.read.format("com.databricks.spark.csv").option("parserLib", "univocity").option("delimiter",";").option("inferSchema","true").option("header","true").load("/obs/data/intermediate/intermediate_wasac_iai_nb_paires.csv")
      
      
      val gather_nb_paires_join = gather_ios_join.as('a).join(df_incidentologie_wasac_iai_nb_paires.as('b), $"a.num_ticket" === $"b.ticketid" && $"a.pht_idtcom" === $"b.feuillet", "left_outer")
      
    val lkp_repetitif= sqlContext.read.format("com.databricks.spark.csv").option("parserLib", "univocity").option("delimiter",";").option("inferSchema","true").option("header","true").load("/home/sabari/LKP_REPETITIFS.csv")
      
    val join_lkp= gather_nb_paires_join.as('a).join(lkp_repetitif.as('b), $"a.category" === $"b.category" && $"a.subcategory" === $"b.subcategory","left_outer").select($"a.*",$"b.nb_repetitions")
      
    val is_repetitif = join_lkp.withColumn("join_lkp", when($"nb_repetitions".isNotNull, "oui").otherwise("non"))
    
    
    sc.stop()

  }
}
